name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential
        # Install comprehensive boost packages
        sudo apt-get install -y libboost-all-dev || {
          echo "libboost-all-dev failed, trying individual packages..."
          sudo apt-get install -y libboost-dev libboost-thread-dev libboost-system-dev
        }
        echo "Boost installation completed"
        dpkg -l | grep boost
    
    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake boost
    
    - name: Configure
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON -DBUILD_EXAMPLES=ON
    
    - name: Build
      run: cmake --build build --parallel
    
    - name: Test
      run: |
        cd build
        echo "Running tests..."
        if [ -f "./tests/simple_test" ]; then
          ./tests/simple_test
        else
          echo "simple_test not found"
        fi
        if [ -f "./tests/unit_tests" ]; then
          ./tests/unit_tests
        else
          echo "unit_tests not found"
        fi
        echo "Running examples..."
        if [ -f "./examples/basic_example" ]; then
          ./examples/basic_example
        else
          echo "basic_example not found"
        fi
        if [ -f "./examples/buffer_operations" ]; then
          ./examples/buffer_operations
        else
          echo "buffer_operations not found"
        fi 