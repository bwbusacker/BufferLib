name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential wget

    - name: Build Boost from source (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        echo "Building Boost 1.88.0 from source..."
        cd /tmp
        
        # Download boost 1.88.0
        wget https://archives.boost.io/release/1.88.0/source/boost_1_88_0.tar.gz
        tar -xzf boost_1_88_0.tar.gz
        cd boost_1_88_0
        
        # Configure boost build
        ./bootstrap.sh --with-libraries=thread,system --prefix=$HOME/boost-1.88.0
        
        # Build and install boost
        ./b2 --j$(nproc) variant=release link=shared threading=multi install
        
        echo "Boost build completed. Installation directory: $HOME/boost-1.88.0"
    
    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake boost
    
    - name: Configure
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          export BOOST_ROOT=$HOME/boost-1.88.0
          export LD_LIBRARY_PATH=$HOME/boost-1.88.0/lib:$LD_LIBRARY_PATH
          cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON -DBUILD_EXAMPLES=ON \
            -DBoost_ROOT=$BOOST_ROOT \
            -DBoost_INCLUDE_DIR=$BOOST_ROOT/include \
            -DBoost_LIBRARY_DIR=$BOOST_ROOT/lib
        else
          cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON -DBUILD_EXAMPLES=ON
        fi
    
    - name: Build
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          export LD_LIBRARY_PATH=$HOME/boost-1.88.0/lib:$LD_LIBRARY_PATH
        fi
        cmake --build build --parallel
    
    - name: Test
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          export LD_LIBRARY_PATH=$HOME/boost-1.88.0/lib:$LD_LIBRARY_PATH
        fi
        cd build
        echo "Running tests..."
        if [ -f "./tests/simple_test" ]; then
          ./tests/simple_test
        else
          echo "simple_test not found"
        fi
        if [ -f "./tests/unit_tests" ]; then
          ./tests/unit_tests
        else
          echo "unit_tests not found"
        fi
        echo "Running examples..."
        if [ -f "./examples/basic_example" ]; then
          ./examples/basic_example
        else
          echo "basic_example not found"
        fi
        if [ -f "./examples/buffer_operations" ]; then
          ./examples/buffer_operations
        else
          echo "buffer_operations not found"
        fi 